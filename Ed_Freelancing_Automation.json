{
  "name": "Ed Freelancing Automation",
  "nodes": [
    {
      "parameters": {
        "fieldToSplitOut": "projects_to_bid",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        360,
        -360
      ],
      "id": "0606f18c-8fab-4e05-a96e-468a9aa98ee3",
      "name": "Split Out"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "1n7PHQfZa89w62dCXhrbLpi_gDSMExRbaRLN7zFkHwEY"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        100,
        -460
      ],
      "id": "560f38f3-d880-4725-8abc-2e27c7d3b4d8",
      "name": "Google Docs",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "miLQfEDmeZIeiFq1",
          "name": "Ed Google Docs"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"project_id\": \"number\",\n  \"bid_proposal\": \"Proposal context\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        840,
        -140
      ],
      "id": "e3f4f1b6-04d7-4890-9d1a-6ce851d16624",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "url": "https://www.freelancer.com/api/projects/0.1/bids/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={ \n  \"project_id\": {{ $json.output.project_id }},\n  \"bidder_id\": 456,\n  \"amount\":{{ $('Get refined projects from Django rest').item.json.projects_to_bid[0].bid_avg }} ,\n  \"period\": 7,\n  \"milestone_percentage\": 100\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1960,
        -340
      ],
      "id": "16dff222-f906-4f68-ab91-24117b834f67",
      "name": "Bidding",
      "credentials": {
        "httpBearerAuth": {
          "id": "1paHxU4Yo1wH1bf3",
          "name": "Freelancer Bearer Auth account"
        }
      }
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Generate clean, modern HTML email content from the provided JSON data with these requirements:\n\nGoal: Send a Gmail email to a freelancer (Edwin) with human-in-the-loop review of AI-generated bid proposals.\n\nStructure & Layout:\n\nUse table-based layout with inline CSS for maximum email client compatibility\n\nStructure using:\n\n600px max-width container\n\n20px padding between project cards\n\nLeft-aligned hierarchy\n\nFont: Arial, sans-serif\n\nText color: #333, secondary color: #555\n\nCard Elements (for each project):\n\nTitle Header (20px bold)\n\nBid Proposal: 2 short paragraphs (16px), generated by AI\n\nProject Description (optional, italic 14px)\n\nHashtag List: Render using inline-block spans (styled)\n\nCall-to-Action:\n\nInclude bold 14px CTA: \"Approve Bid\", \"Edit Proposal\", \"Reject\"\n\nCTA links should point to n8n webhooks or approval endpoints\n\nFunctional Requirements:\n\nDisplay project_id, title, and currency in each card\n\nPreserve emojis and formatting\n\nInclude a footer with:\n\nPortfolio: https://eddiemuhoro.vercel.app\n\nGitHub: https://github.com/eddiemuhoro\n\nHashtag Format:\n\n<span style=\"display: inline-block; background: #f0f0f0; padding: 2px 6px; margin: 2px; border-radius: 4px;\">#tag</span>\n\nInput:\n\n{{ $json.output.toJsonString() }}\n\nOutput:\n\nReturn only raw HTML â€” no comments, no code blocks. Ensure:\n\nMobile responsiveness\n\nW3C-valid markup\n\nPlatform cards appear in original JSON order\n\nAll required elements are present for HITL workflow\n\n",
        "options": {}
      },
      "id": "3789b1ec-8b84-4b63-bde0-a90c5a1051c3",
      "name": "Prepare Content Review Email",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        980,
        -360
      ],
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "sendTo": "=eddiemuhoro@gmail.com",
        "subject": "=ðŸ”¥FOR APPROVALðŸ”¥{{ $('Bidding Factory').item.json.output.name }} - {{ $('Bidding Factory').item.json.output.description }}",
        "message": "={{ $json.output }}",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeAmount": 45,
              "resumeUnit": "minutes"
            }
          }
        }
      },
      "id": "03afac58-3061-4d6a-aaf8-a55ca8c2cff5",
      "name": "Gmail User for Approval",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1440,
        -320
      ],
      "webhookId": "c46cf421-ddb6-45a8-b83b-80b381666f0e",
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "RF7ARzquZtXFZNUv",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "options": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1440,
        -700
      ],
      "id": "ff57a30b-d381-4ddc-baac-31ec642e1984",
      "name": "Telegram",
      "webhookId": "5236c09c-f6ed-43f2-a965-3a0cab0921f7",
      "credentials": {
        "telegramApi": {
          "id": "EWl5JvpDBM6qRXwL",
          "name": "Bot Sales"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "e32d270f-f258-4522-94e1-2cb7ee4e8d2a",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.data.approved }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "e8c95d14-f1cd-49fa-801f-f6165372173f",
      "name": "Is Bid Approved?",
      "type": "n8n-nodes-base.if",
      "position": [
        1700,
        -320
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1020,
        -140
      ],
      "id": "1e24a3d6-ef3e-496c-ae54-6eb30d98122c",
      "name": "4o-mini",
      "credentials": {
        "openAiApi": {
          "id": "bT1qRci6VVoWzZs9",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        1440,
        -520
      ],
      "id": "993e4d6d-ec1c-4d7d-88a8-3d31f8b71ade",
      "name": "WhatsApp Approval Request",
      "webhookId": "8d3fc22c-e5df-44ae-8f9d-97339b5ed864",
      "credentials": {
        "whatsAppApi": {
          "id": "RnwIAvV6jh4u6mH5",
          "name": "WhatsApp account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        460,
        -140
      ],
      "id": "109cdce9-2b93-4094-b5aa-a5e9ccfa94b9",
      "name": "4o",
      "credentials": {
        "openAiApi": {
          "id": "bT1qRci6VVoWzZs9",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        600,
        -140
      ],
      "id": "e0db6a0c-5f75-4fbe-a49e-8cb59b48b4c0",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "HFyl9UBpzZHq7Wme",
          "name": "Postgres account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a freelance proposal-writing AI.\n\nHereâ€™s your task:\n\nGenerate a very brief bid proposal (2 natural-sounding short paragraphs) tailored to the following project:\n\nProject Id: {{ $json.id }}\nTitle: {{ $json.title }}\nDescription: {{ $json.description }}\n\nInstructions:\n- Be clear, confident, and authentic.\n- Mention only the most relevant skills or experience.\n- Never over-promise.\n- Keep tone warm, capable, and human.\n- End with:\n\nRegards,  \nEdwin Muhoro  \nPortfolio: https://eddiemuhoro.vercel.app  \nGitHub: https://github.com/eddiemuhoro\n\n\nCV Summary (for context use by the AI):\nName: Edwin Muhoro\nTitle: Full-Stack Web & Mobile Developer\nKey Skills: React, Next.js, Vue, Node.js, FastAPI, Flask, Firebase, Stripe, MPESA APIs, PostgreSQL, Prisma, DevOps (Vercel, AWS Amplify)\nNotable Work: GIS-integrated agriculture systems, Kenyan job platform, ERP & eCommerce APIs\nEducation: BSc Computer Science, Dedan Kimathi University\nExperience: Agrogis (Romania), Anmart Developers, Sajsoft, Thelathin Group\n\nFollow the provided JSON schema for your reponse.",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Use the provided tools to research the topic based on latest information.  Todays date is {{ $now }}"
        }
      },
      "id": "5625e37e-680c-475d-adef-7be6e236e429",
      "name": "Bidding Factory",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        580,
        -360
      ],
      "retryOnFail": true,
      "typeVersion": 1.7
    },
    {
      "parameters": {
        "url": "https://bc58-41-90-46-73.ngrok-free.app/freelancer/projects/",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        100,
        -220
      ],
      "id": "565ac59e-f8b5-42c4-87d5-6e225433f07c",
      "name": "Get refined projects from Django rest"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -120,
        -340
      ],
      "id": "706d1308-b8a5-47bb-adb9-56b80febcc29",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "Split Out": {
      "main": [
        [
          {
            "node": "Bidding Factory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Docs": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Bidding Factory",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Content Review Email": {
      "main": [
        [
          {
            "node": "Gmail User for Approval",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail User for Approval": {
      "main": [
        [
          {
            "node": "Is Bid Approved?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o-mini": {
      "ai_languageModel": [
        [
          {
            "node": "Prepare Content Review Email",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Is Bid Approved?": {
      "main": [
        [
          {
            "node": "Bidding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram": {
      "main": [
        []
      ]
    },
    "4o": {
      "ai_languageModel": [
        [
          {
            "node": "Bidding Factory",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "Bidding Factory",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Bidding Factory": {
      "main": [
        [
          {
            "node": "Prepare Content Review Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get refined projects from Django rest": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Google Docs",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get refined projects from Django rest",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c8eec5f1-5c89-4835-9f4a-db0b6d23fbc4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "a5ad660676cf0daa676be4e32078322ddf3238442ea6de13c1c05b645cf1e707"
  },
  "id": "ExugolEaO8BaDE4j",
  "tags": []
}